CMAKE_MINIMUM_REQUIRED(VERSION 3.16)
PROJECT(importance_distributions LANGUAGES CXX VERSION 0.1.0)

SET(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "add a postfix, usually d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "rd" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_MINSIZEREL_POSTFIX "s" CACHE STRING "add a postfix, usually empty on windows")

# General CXX and CMake features
OPTION(BUILD_SHARED_LIBS "Build libraries as shared or static" ON)
SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_EXPORT_COMPILE_COMMANDS TRUE)
SET(THREADS_PREFER_PTHREAD_FLAG ON)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")

# Packages
FIND_PACKAGE(glm REQUIRED)
FIND_PACKAGE(NTL REQUIRED)
FIND_PACKAGE(OpenMP)
if (OPENMP_FOUND)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()

SET(SOURCES
    is/ivector.cpp
)

SET(HEADERS_IS
    is/grid.h
    is/ibuffer.h
    is/ivector.h
    is/range.h
    is/storage.h
)

SET(HEADERS_GENERATORS
    generators/xorshift.h
    generators/lcg.h
)

SET(HEADERS_SHARED
    shared/api.h
    shared/circular_distributions.h
    shared/config.h
    shared/distribution.h
    shared/distributions_1d.h
    shared/distributions_2d.h
    shared/fast_float.h
    shared/mapping.h
    shared/mixture_distributions.h
    shared/spherical_distributions.h
    shared/stb_image.h
    shared/test_setup.h
)

SET(HEADERS ${HEADERS_IS} ${HEADERS_GENERATORS} ${HEADERS_SHARED})

ADD_LIBRARY(${PROJECT_NAME} ${SOURCES} ${HEADERS})
ADD_LIBRARY(${PROJECT_NAME}::${PROJECT_NAME} ALIAS ${PROJECT_NAME})

IF(MSVC)
    TARGET_COMPILE_OPTIONS(${PROJECT_NAME} PRIVATE /W4 /WX)
ELSE()
    TARGET_COMPILE_OPTIONS(${PROJECT_NAME} PRIVATE -Wall -Wextra -pedantic -mavx2 -mavx)
ENDIF()

INCLUDE(GNUInstallDirs)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC ${ASSIMP_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${NTL_LIBRARY})

INCLUDE(GenerateExportHeader)
GENERATE_EXPORT_HEADER(${PROJECT_NAME} EXPORT_FILE_NAME ${PROJECT_NAME}/${PROJECT_NAME}_export.h)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES VERSION ${PROJECT_VERSION})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION_MAJOR})

INSTALL(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}Targets
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    COMPONENT ${PROJECT_NAME}_Runtime
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    COMPONENT ${PROJECT_NAME}_Runtime
    NAMELINK_COMPONENT ${PROJECT_NAME}_Development
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
    COMPONENT ${PROJECT_NAME}_Development
)

INSTALL(FILES
    ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}_export.h
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}
)

INCLUDE(CMakePackageConfigHelpers)
WRITE_BASIC_PACKAGE_VERSION_FILE(
    ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}ConfigVersion.cmake
    VERSION ${PROJECT_VERSION}
    COMPATIBILITY SameMajorVersion
)

EXPORT(
    EXPORT ${PROJECT_NAME}Targets
    FILE ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}Targets.cmake
    NAMESPACE ${PROJECT_NAME}::
)

SET(CONFIG_PACKAGE_LOCATION lib/cmake/${PROJECT_NAME})
INSTALL(
    EXPORT ${PROJECT_NAME}Targets
    FILE ${PROJECT_NAME}Targets.cmake
    NAMESPACE ${PROJECT_NAME}::
    DESTINATION ${CONFIG_PACKAGE_LOCATION}
)

FILE(
    WRITE ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}Config.cmake
    "INCLUDE($" "{CMAKE_CURRENT_LIST_DIR}/${PROJECT_NAME}Targets.cmake)"
)

INSTALL(
    FILES
    ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}Config.cmake
    ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}ConfigVersion.cmake
    DESTINATION ${CONFIG_PACKAGE_LOCATION}
    COMPONENT Devel
)

ADD_SUBDIRECTORY(tests)
